//1.我们使用USB线连接Arduino Uno与计算机时，Arduino Uno会在计算机上虚拟出一个串口设备，此时两者之间便建立了串口连接。
//通过此连接，Arduino Uno便可与计算机互传数据。
//使用串口与计算机通信，需要先使用Serial.begin() 初始化Arduino的串口通信功能。

Serial.begin(speed);

//2.参数speed是指串口通信波特率，这是设定串口通信速率的参数。串口通信的双方必须使用同样的波特率，方能正常进行通信。

//波特率是一个衡量通信速度的参数。它表示每秒钟传送的bit的个数。例如9600波特表示每秒发送9600bit的数据。
//通信双方需要使用一致的的波特率才能正常通信。Arduino串口通信通常会使用以下波特率：
300、600、1200、2400、4800、9600、14400、19200、28800、38400、57600、115200。
//波特率越大，说明串口通信的速率越快。

//3.串口输出
//串口初始化完成后，我们便可以使用Serial.print() 或Serial.println() 向计算机发送信息了。
Serial.print(val);
//参数val是你要输出的数据，各种类型的数据均可。
Serial.println(val);
//Serial.println(val) 语句也是使用串口输出数据，不同的是println() 函数会在输出完指定数据后，再输出一组回车换行符。

//4.串口输入
//除了输出，串口同样可以接收由计算机输出的数据。接收串口数据需要使用Serial.read()函数。
Serial.read();
//调用该语句，每次都会返回一个字节的数据，这个返回值便是当前串口读取到的数据。
//上传成功后，运行串口监视器，在发送按键左侧的文本框中输入要发送的信息，
//如"arduino"，你会看到Arduino在输出了你输入的信息同时，还输出了很多乱码
//这些乱码是因为串口缓冲区中没有可读数据造成的。当缓冲区中没有可读数据时，read()函数会返回int型值-1，
//而int型-1对应的char型数据便是该乱码。

//在使用串口时，Arduino Uno会在SRAM中开辟一段大小为256 bytes的空间，串口接收到的数据都会被暂时存放进这个空间中，
//这个存储空间，我们称之为缓冲区。当你调用Serial.read()语句时，Arduino便会从缓冲区取出一个字节的数据。


//5.通常使用串口读取数据时，需要搭配Serial.available() 语句使用。
Serial.available();
//Serial.available() 的返回值便是当前缓冲区中接收到的数据字节数。
//Serial.available() 可以搭配if 或者while使用，先检测缓冲区中是否有可读数据，
//如果有数据，再读取，没有数据便跳过读取或等待读取。
if( Serial.available() > 0 ) while( Serial.available() > 0 )
	
//6.当串口通信时，Arduino控制器上的标有RX、TX的两LED灯会闪烁提示，接收数据时，RX灯会点亮，发送数据时，TX灯会点亮。

//7.此外，在涉及串口通信的Arduino Uno例程程序中，还会经常看到如下特殊用法：
while (!Serial) { }
//这是在等待串口监视器开启，开启串口监视器后，!Serial将为假，即会运行该while循环后的语句。
//利用串口通信功能，我们可以使用计算机来控制Arduino执行特定的操作。
